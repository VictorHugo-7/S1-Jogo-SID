SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=1;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=TRADITIONAL;

use sid;

DROP TABLE IF EXISTS perguntas CASCADE;
CREATE TABLE perguntas 
( id_perguntas INT AUTO_INCREMENT PRIMARY KEY,
pergunta VARCHAR(200) NOT NULL,
resposta_certa VARCHAR(200) NOT NULL,
resposta_errada1 VARCHAR(200) NOT NULL,
resposta_errada2 VARCHAR(200) NOT NULL,
resposta_errada3 VARCHAR(200) NOT NULL,
justificativa VARCHAR(200) NOT NULL,
id_professores_cadastra INT,
FOREIGN KEY (id_professores_cadastra) REFERENCES
professores (id_professores) ON DELETE RESTRICT ON UPDATE CASCADE) 
ENGINE = InnoDB;

DROP TABLE IF EXISTS professores CASCADE;
CREATE TABLE professores(
id_professores INT AUTO_INCREMENT PRIMARY KEY,
nome_professor VARCHAR(70) NOT NULL,
email_professor VARCHAR(50) NOT NULL,
senha_professor VARCHAR(50) NOT NULL
)
ENGINE = InnoDB;

DROP TABLE IF EXISTS aluno CASCADE;
CREATE TABLE aluno (
id_aluno INT AUTO_INCREMENT PRIMARY KEY,
nome_aluno VARCHAR(70) NOT NULL,
email_aluno VARCHAR(50) NOT NULL,
senha_aluno VARCHAR(50) NOT NULL,
turma TINYINT NOT NULL
)
ENGINE = InnoDB;

DROP TABLE IF EXISTS ranking CASCADE;
CREATE TABLE ranking (
id_ranking INT AUTO_INCREMENT PRIMARY KEY,
pontuacao INT NOT NULL,
id_aluno_popula INT,
FOREIGN KEY (id_aluno_popula) REFERENCES
aluno (id_aluno) ON DELETE RESTRICT ON UPDATE CASCADE)
ENGINE = InnoDB;

DROP TABLE IF EXISTS adm CASCADE;
CREATE TABLE adm (
id_adm INT AUTO_INCREMENT PRIMARY KEY,
nome_adm VARCHAR(70) NOT NULL,
email_adm VARCHAR(50) NOT NULL,
senha_adm VARCHAR(50) NOT NULL
)
ENGINE = InnoDB;